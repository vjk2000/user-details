name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      # If your backend needs a database, add it here
      # postgres:
      #   image: postgres:13
      #   env:
      #     POSTGRES_PASSWORD: postgres
      #   options: >-
      #     --health-cmd pg_isready
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup Python for backend
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    # Setup Node.js for frontend
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
    
    # Install backend dependencies
    - name: Install Python dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Start backend server
    - name: Start backend server
      working-directory: ./backend
      run: |
        python app.py &
        sleep 5  # Wait for server to start
      env:
        # Add any environment variables your backend needs
        FLASK_ENV: testing
        # DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
    
    # Install frontend dependencies
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    # Build frontend
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    # Start frontend server (if needed for tests)
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm start &
        sleep 10  # Wait for server to start
      env:
        CI: true
    
    # Install Playwright browsers
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    # Run Playwright tests
    - name: Run Playwright tests
      working-directory: ./frontend
      run: npx playwright test
    
    # Upload test results
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
    
    # Upload test results as GitHub Pages (optional)
    - name: Upload test results to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: frontend/playwright-report
        destination_dir: playwright-reports/${{ github.run_number }}